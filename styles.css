/* My CSS sheet should contain all of my style elements with {}  */

/* Don't forget to go and grab fonts that you may need on Google Fonts or Adobe Fonts
Google font link: https://fonts.google.com/
*/

/* Universal Styles Codes Reference */

html {
    font-size: 16px; /* This allowed me to change the font size */
    font-family: Arial, Helvetica, sans-serif; /* This allowed me to change the font */
    color: black; /* This allowed me to change the font color */
    background-color: white; /* This allowed me to change the background color */
    line-height: 1.5; /* This allowed me to change the line height */
    margin: 0; /* This allowed me to remove the margin */
    padding: 0; /* This allowed me to remove the padding */
} 

/* This is the CSS for the body */

.information {
    text-align: center; /* This allowed me to center the text */
    /* the 3 additional lines allowed to properly center the elements */
    display: inline-block; /* Ensure the element is inline-block */
    width: 100%; /* Set the width to 100% or any specific value */
    margin: 0 auto; /* Center the element horizontally */
}

.header {
    font-family: Helvetica; /* This allowed me to change the font */
    font-size: 75px; /* This allowed me to change the font size */
    font-weight: bold; /* This allowed me to make the font bold */
    color:khaki;    /* This allowed me to change the font color */
    text-align: center; /* This allowed me to center the text */
    background-image: url("./images/roadbanner.jpg"); /* This allowed me to insert a background image located in a local folder */
    background-size: cover; /* This allowed me to cover the background image */
    background-position: center; /* This allowed me to center the background image */
    padding: 30px 0; /* Adjust padding as needed Padding in this case = how vertical would the banner look */
    position: relative; /* This allowed me to position the text. */

}

.section1box {
    font-family: Tahoma, Helvetica; /* This allowed me to change the font */
    font-size: 20px; /* This allowed me to change the font size */
    font-weight: bold; /* This allowed me to make the font bold */
    color: white; /* This allowed me to change the font color */
    text-align: center; /* This allowed me to center the text */
    background-color: black; /* This allowed me to change the background color */
    padding: 10px 0; /* Adjust padding as needed */
    position: relative; /* This allowed me to position the text */
}

.coolwords {
    font-family: Arial, Helvetica, sans-serif; /* This allowed me to change the font */
    color: blue; /* This allowed me to change the font color */
    font-weight: bold; /* This allowed me to make the font bold */
    font-style: italic; /* This allowed me to make the font italic */
    /* STYLING text-decoration: underline; /* This allowed me to underline the text
    You should always consider making your default link style match your color scheme. */ 
    text-decoration: underline; 
}

/* additonal styling info - Tooltips & Titles
Tooltips are small pop-ups that appear when you hover over a link or button. They provide additional information about the link or button.
Titles are text that appears when you hover over an image or other elements. They provide additional information about the element.
*/

/* HOVER STATES & CURSOR STYLES

example CSS code could ::before
a {
   color: blue;
}
   The above code sets the default state of the link to blue. To change the color when the link is hovered over, you can use the :hover pseudo-class.
a:hover {
   color: red;
}
   The above code changes the color of the link to red when it is hovered over.

   Another example code relates to text decoration
a {
  color: #466995;
  text-decoration: underline;
}

a:hover {
  color: #466995;
  text-decoration: none;
}
  The above code sets the default state of the link to blue with an underline. When the link is hovered over, the underline is removed.

  A traditional cursor style for links is the pointer cursor. This cursor style indicates that the element is clickable.
  The basic code structure for changing the cursor style is as follows:
a {
  cursor: pointer;
}

   Don't forget to not mix Users by using this as sole indication that something is a link.Users should not be forced to move their mouse over an entire document to tell what might be clickable. Additionally, hover states are not accessible in mobile browsers. 
   Mobile devices do not generally have on-screen cursors, and users must actually touch the device (and possibly trigger a click event) to interact.

   The ordering of link state pseudo-class rules is important to reveal the proper information. When a user hovers and then clicks a link, those styles should always override the 
Preview: Docs Loading link description
static
 styling surrounding a userâ€™s history with the link (unvisited :link and :visited). The proper order of these rules is:

:link
:visited
:hover
:active
This ordering will ensure that the rules cascade properly and the user can receive the most applicable visual feedback about the state of the link.

*/

/* button making - styling 

The concept of UI elements that replicate or imitate real-life counterparts is known as skeuomorphism.

Flat design is an alternative approach to skeuomorphism that embraces the fact that computer interfaces do not necessarily need to model real-life interfaces.

Material design is a design language developed by Google that combines skeuomorphic principles with flat design. 
It emphasizes the use of shadow and depth to create a sense of hierarchy and order.

Example CSS code for 3x buttons styles (see my html file for the buttons)

CSS styles button should be preferred over image styles as they are faster to load, have smaller files sizes, and are easier to maintain.

***BARE MINIMUM 3-d button design, the following CSS ruleset should be used:

button {
  padding: 5px;
  border: 1px solid black;
  border-radius: 5px;
  text-decoration: none;
  box-shadow: 0px 5px;
}

button:hover {
  cursor: pointer;
}

button:active {
  margin-top: 5px;
  color: black;
  box-shadow: 0px 0px;
}

Afterwards, in HTML code, a button element can then be created with the following HTML code:

<button>Click Me</button>

***************

**BARE MINIMUM FLAT BUTTON INERACTION DESIGN

.answer {
  border: 1px solid #466995;
}

.answer:active {
background-color: #C0D6DF;
color: #ffffff;
}

Button Hover states
Users expect buttons to be clickable. 
Since buttons can consist of any number of total elements (rectangular/circular body, text, image(s)), 
all elements should be clickable, should display their clickability, and should result in the same behavior.

Consider following example::after

.answer:hover {
background-color: #C0D6DF;
}

.answer:active {
  color: #ffffff;
}

= This code changes the background color of the button when the user hovers over it.

*/

.content {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-around;
  height: 400px;
  font-family: 'Roboto', sans-serif;
}

button {
  height: 50px;
  width: 200px;
  cursor: pointer;
  font-weight: 600;
  font-size: 15px;
}

.skeuomorphic {
  border: 2px solid #0c960c;
  border-radius: 5px;
  color: #F8F8F8;
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.2), 0px -2px 2px rgba(255, 255, 255, 0.5) inset, 0 2px 2px rgba(255, 255, 255, 0.8) inset;
  background: linear-gradient(#1D1, #0ebc0e);
  text-shadow: 0 -2px #0c960c;
}

.skeuomorphic:hover {
  box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1), 0px -2px 2px rgba(255, 255, 255, 0.25) inset, 0 2px 2px rgba(255, 255, 255, 0.4) inset;
  background: #0ebc0e;
  background: linear-gradient(#0ebc0e, #0c960c);
  border-color: #064f06;
}

.skeuomorphic:active {
  margin-top: 2px;
  margin-bottom: -2px;
  box-shadow: 0px 2px 2px rgba(63, 63, 63, 0.1), 0px -2px 2px rgba(255, 255, 255, 0.25) inset, 0 2px 2px rgba(255, 255, 255, 0.4) inset;
  background: #0c960c;
  background: linear-gradient(#0c960c, #0ebc0e);
}

.flat {
  background-color: #1D1;
  color: #fff;
  border: 2px solid #12dd23;
  border-radius: 10px;
}

.flat:hover {
  background-color: #350c96; /* This allowed me to change the background color of the button when hovered over */
  transition: background-color .15s, font-size .15s;
  font-size: 28px; /* This allowed me to change the font size of the button when hovered over */
}

.flat:active {
  border-color: #fff;
}



/* This is the CSS for the image imbedding them as container, allows to control within it */
.image-container {
    text-align: center; /* Center the image and caption */
}

/* This is the CSS for the image caption */
.image-caption {
    text-align: center; /* Center the text */
    font-style: italic; /* Make the text italic */
    margin-top: 10px; /* Add some space above the text */
}

/* Styling example for color red */

/* Color Guide */

#color-guide {
    padding: 3.875rem 15% 13.5rem 15%;
  }
  
  #color-guide .introduction {
    padding: 0 10%;
    margin-bottom: .75rem;
    text-align: center;
    font-size: 1.375rem;
    line-height: 1.4;
  }
  
  #color-guide h2 {
    margin-bottom: 2.4375rem;
    line-height: 1;
    font-size: 2rem;
    color: #ff8000;
  }
  
  #color-guide .color {
    display: flex;
    justify-content: space-between;
    padding-top: 5.25rem;
  }
  
  .color .information {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    width: 35%;
  }
  
  .color .information h3 {
    padding-bottom: .5rem;
    font-size: 1.375rem;
    font-weight: bold;
  }
  
  .color .information p {
    font-size: .875rem;
    line-height: 1.4;
  }
  
  .color .swatches {
    width: 60%;
  }
  
  .color .swatches h4 {
    margin-bottom: 1.25rem;
    font-size: 1.125rem;
    font-weight: bold;
    color: #0c0a92;     /* This allowed me to change the font color of lightness Saturation and hue headings */
  }
  
  .color .swatch {
    display: flex;
    height: 6.6875rem;
    border: 10px solid #450d8f; /* This allowed me to change the SURROUNDING border color of the separator boxes */
    margin-bottom: 3rem; /* Adds a 20px margin to the bottom of the element if the root font size is 16px */
}


  .color .swatch:last-child {
    margin-bottom: 5; /* Adds a 5px margin to the bottom of the element FOCUS ON THE LAST-child= last element of that chain */
  }
  
  .color .swatch > div {
    flex-grow: 1;
    border-right: 10px solid #e6e6e6; /* This allowed me to change the VERTICAL border color of the separator boxes */
  }
  
  .color .swatch > div:last-child {
    border-right: 0;
  }
  
  @media only screen and (max-width: 820px) {
    #color-guide .color {
      flex-direction: column;
      align-items: center;
    }
  
    .color .information {
      width: 100%;
      margin-bottom: 3rem;
      align-items: center;
    }
  
    .color .information h3 {
      padding-bottom: 1.5rem;
    }
  
    .color .information p {
      margin-bottom: 2rem;
    }
  
    .color .swatches {
      width: 100%;
    }
  }
  

/* Red Swatches */

.reds .base-color {
    color: hsl(138, 76%, 40%);  /* This allowed me to change the font color of the "Our base red is .... text */
  }
  
  /* Red lightness decreases by 15 */
  .reds .lightness .color-1 {
  background-color: hsl(350, 100%, 80%)
  }
  
  .reds .lightness .color-2 {
    background-color: hsl(350, 100%, 65%);
  }
  
  .reds .lightness .color-3 {
    background-color: hsl(350, 100%, 50%);
  }
  
  .reds .lightness .color-4 {
    background-color: hsl(350, 100%, 35%);
  }
  
  .reds .lightness .color-5 {
    background-color: hsl(350, 100%, 20%);
  }
  
  /* Red saturation decreases by 15 */
  .reds .saturation .color-1 {
  background-color: hsl(350, 100%, 50%)
  }
  
  .reds .saturation .color-2 {
    background-color: hsl(350, 85%, 50%);
  }
  
  .reds .saturation .color-3 {
    background-color: hsl(350, 70%, 50%);
  }
  
  .reds .saturation .color-4 {
    background-color: hsl(350, 55%, 50%);
  }
  
  .reds .saturation .color-5 {
    background-color: hsl(350, 40%, 50%);
  }
  
  /* Red hue increases by 15 */
  .reds .hue .color-1 {
  background-color: hsl(320, 100%, 50%)
  }
  
  .reds .hue .color-2 {
    background-color: hsl(335, 100%, 50%);
  }
  
  .reds .hue .color-3 {
    background-color: hsl(350, 100%, 50%);
  }
  
  .reds .hue .color-4 {
    background-color: hsl(5, 100%, 50%);
  }
  
  .reds .hue .color-5 {
    background-color: hsl(20, 100%, 50%);
  }

 /* Footer */

footer {
    display: flex;
    align-items: center;
    padding: 0 1%;
    background-color: #212121;
    line-height: 1.5;
    font-family: Merriweather, serif;
    padding-top: 2rem;
    padding-bottom: 1.66rem;
  }
  
  footer .image-container {
    width: 400px;
  }
  
  footer .content {
    flex-grow: 1;
    font-style: italic;
    color: #9b9b9b;
  }
  
  footer p {
    padding-bottom: 1.66rem;
  }
  
  footer p:last-child {
    padding-bottom: 0;
  }
  
  footer .author {
    color: #ffb78c;
  }
  
  footer em {
    color: #cfcfcf;
  }
  
  @media only screen and (max-width: 750px) {
    footer {
      flex-direction: column;
      padding: 0 10% 2rem 10%;
    }
  
    footer .image-container {
      height: 300px;
      margin-bottom: 3rem;
      overflow: hidden;
    }
  }

.table-container {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 20px; /* This allowed me to add margin to the top of the table a.k.a how much space after next item*/
    margin-bottom: 50px; /* This allowed me to add margin to the bottom of the table a.k.a how much space before next item*/
    background-color: transparent; /* I can use transparent or a color code This value is actually going to be the background color if there is remaining space not occupied by your table */
}

table {
    width: 50%; /* xx% (out of 100%) allowed me to set the width of the table or i can use auto command to shape it based on data */
    border-collapse: collapse; /* This allowed me to collapse the borders */
    border-spacing: 0 auto; /* Center the table */
}

th, td {
  border: 3px solid black; /* Add border to table cells  + specifies color*/
  padding: 2px; /* Add internal text padding to table cells */
  text-align: left; /* Align text to the left */
  background-color: #f9f9f9; /* Set background color for table cells */
}

th {
  background-color: #f2f2f2; /* Set background color for table headers */
  font-weight: bold; /* Make table headers bold */
  background-color: lightcoral; /* This allowed me to change the background color of the table headers */
}

th:nth-child(1), td:nth-child(1) {
  width: auto; /* Set the width of the first column to auto */
}

th:nth-child(2), td:nth-child(2) {
  width: 30%; /* Set the width of the second column to 30% */
}

th:nth-child(3), td:nth-child(3) {
  width: 70%; /* Set the width of the third column to 70% */
}


/* reference for me 

In CSS, # and . are used to select elements based on their id and class attributes, respectively.

# Selector
Usage: Selects an element by its id.
Syntax: #id
Example:
. Selector
Usage: Selects elements by their class.
Syntax: .class
Example:
Key Differences
Uniqueness: An id should be unique within a document, meaning only one element should have a particular id. A class can be used on multiple elements.
Specificity: id selectors (#) have higher specificity than class selectors (.), meaning styles applied with id selectors will override those applied with class selectors if both are applied to the same element.
Usage: id selectors are used to target specific elements, while class selectors are used to target groups of elements that share a common style.
*/